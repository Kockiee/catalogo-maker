/**
 * P√°gina de informa√ß√µes da conta do usu√°rio
 * 
 * Este arquivo cont√©m a p√°gina onde o usu√°rio pode visualizar
 * todas as informa√ß√µes da sua conta, incluindo dados pessoais,
 * status de verifica√ß√£o, plano premium e op√ß√µes de gerenciamento
 * da conta como logout e exclus√£o.
 * 
 * Funcionalidades principais:
 * - Exibi√ß√£o de informa√ß√µes pessoais do usu√°rio
 * - Status de verifica√ß√£o de email
 * - Status do plano premium
 * - Bot√µes para copiar informa√ß√µes importantes
 * - Op√ß√µes de logout e exclus√£o da conta
 */

'use client'
// Importa componente para excluir conta
import DeleteAccountButton from "@/app/dashboard/account/components/DeleteAccountButton"
// Importa contexto de autentica√ß√£o
import { useAuth } from "@/app/contexts/AuthContext"
// Importa biblioteca para formata√ß√£o de datas
import moment from "moment-timezone"
// Importa componente Button do Flowbite
import { Button } from "flowbite-react"
// Importa componente para copiar informa√ß√µes
import CopyButton from "@/app/dashboard/account/components/CopyButton"

// Componente principal da p√°gina de conta
export default function PAGE() {
  // Extrai dados do usu√°rio e fun√ß√µes do contexto de autentica√ß√£o
  const { user, logout, DBUser } = useAuth()

  // Fun√ß√£o que executa o logout do usu√°rio
  const handleSignOut = async() => {
    await logout(); // Chama a fun√ß√£o de logout do contexto
  };

  return (
    <div className="flex flex-col justify-center">
      {/* Sauda√ß√£o personalizada com nome do usu√°rio */}
      <h1 className="text-xl font-bold">Ol√° {DBUser ? DBUser.username : "..."}</h1>
      <h2>Aqui voc√™ encontra as informa√ß√µes completas da sua conta.</h2>
      {/* Grid responsivo com informa√ß√µes da conta */}
      <div className="grid grid-cols-2 max-sm:grid-cols-1 text-lg font-semibold">
        {DBUser && user && (
          <>
            {/* Primeira coluna de informa√ß√µes */}
            <ul>
              {/* Nome de usu√°rio com bot√£o para copiar */}
              <li className="py-2 flex flex-row items-center"><p>Nome de usu√°rio: {user.displayName}</p> <CopyButton toCopy={user.displayName} successMessage="Informa√ß√£o copiada !"/></li>
              {/* Status de verifica√ß√£o de email */}
              <li className="py-2">Email verificado: {user.emailVerified ? "‚úÖ Verificado" : " ‚ùå N√£o verificado"}</li>
              {/* ID da conta com bot√£o para copiar */}
              <li className="break-words py-2 flex flex-row items-center">Id da conta (para suporte): <span className="break-all contents ">{user.uid}</span> <CopyButton toCopy={user.uid} successMessage="Informa√ß√£o copiada !"/></li>
            </ul>
            {/* Segunda coluna de informa√ß√µes */}
            <ul>
              {/* Email do usu√°rio com bot√£o para copiar */}
              <li className="py-2 flex flex-row items-center">Seu email: {user.email} <CopyButton toCopy={user.email} successMessage="Informa√ß√£o copiada !"/></li>
              {/* Data de cria√ß√£o da conta formatada */}
              <li className="py-2">Data de cria√ß√£o: {moment(user.metadata.creationTime).format('DD/MM/YYYY')}</li>
              {/* Status do plano premium */}
              <li className="py-2">Plano premium: {DBUser.premium ? "üëë Ativado" : "Desativado"}</li>
            </ul>
          </>
        )}
      </div>
      {/* Bot√µes de a√ß√£o da conta */}
      <div className="flex max-sm:w-full max-sm:space-x-0 max-sm:flex-col max-sm:space-y-2 space-x-2 mt-4">
        {/* Bot√£o para sair da conta */}
        <Button color="failure" className="duration-200" onClick={handleSignOut}>Sair da conta</Button>
        {/* Bot√£o para excluir a conta */}
        <DeleteAccountButton/>
      </div>
    </div>
  )  
}