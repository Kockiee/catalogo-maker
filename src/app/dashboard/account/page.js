/**
 * P√°gina de informa√ß√µes da conta do usu√°rio
 * 
 * Este arquivo cont√©m a p√°gina onde o usu√°rio pode visualizar
 * todas as informa√ß√µes da sua conta, incluindo dados pessoais,
 * status de verifica√ß√£o, plano premium e op√ß√µes de gerenciamento
 * da conta como logout e exclus√£o.
 * 
 * Funcionalidades principais:
 * - Exibi√ß√£o de informa√ß√µes pessoais do usu√°rio
 * - Status de verifica√ß√£o de email
 * - Status do plano premium
 * - Bot√µes para copiar informa√ß√µes importantes
 * - Op√ß√µes de logout e exclus√£o da conta
 */

'use client'
// Importa componente para excluir conta
import DeleteAccountButton from "@/app/dashboard/account/components/DeleteAccountButton"
// Importa contexto de autentica√ß√£o
import { useAuth } from "@/app/contexts/AuthContext"
// Importa biblioteca para formata√ß√£o de datas
import moment from "moment-timezone"
// Importa componente Button do Flowbite
import { Button } from "flowbite-react"
// Importa componente para copiar informa√ß√µes
import CopyButton from "@/app/dashboard/account/components/CopyButton"

// Componente principal da p√°gina de conta
export default function PAGE() {
  // Extrai dados do usu√°rio e fun√ß√µes do contexto de autentica√ß√£o
  const { user, logout, DBUser } = useAuth()

  // Fun√ß√£o que executa o logout do usu√°rio
  const handleSignOut = async() => {
    await logout(); // Chama a fun√ß√£o de logout do contexto
  };

  return (
    <div className="flex flex-col justify-center bg-lightcyan p-6 rounded-lg shadow-md">
      {/* Sauda√ß√£o personalizada com nome do usu√°rio */}
      <h1 className="text-2xl font-bold text-prussianblue mb-2">Ol√° {DBUser ? DBUser.username : "..."}</h1>
      <h2 className="text-lg text-gray-700 mb-6">Aqui voc√™ encontra as informa√ß√µes completas da sua conta.</h2>

      {/* Grid responsivo com informa√ß√µes da conta */}
      <div className="grid grid-cols-2 max-sm:grid-cols-1 gap-6 text-lg font-semibold">
        {DBUser && user && (
          <>
            {/* Primeira coluna de informa√ß√µes */}
            <ul className="space-y-4">
              <li className="flex justify-between items-center">
                <p className="text-gray-800">Nome de usu√°rio: {user.displayName}</p>
                <CopyButton toCopy={user.displayName} successMessage="Nome de usu√°rio copiado!" />
              </li>
              <li className="flex justify-between items-center">
                <p className="text-gray-800">Id da conta (para suporte): {user.uid}</p>
                <CopyButton toCopy={user.uid} successMessage="ID copiado!" />
              </li>
              <li className="flex justify-between items-center">
                <p className="text-gray-800">Seu email: {user.email}</p>
                <CopyButton toCopy={user.email} successMessage="Email copiado!" />
              </li>
            </ul>

            {/* Segunda coluna de informa√ß√µes */}
            <ul className="space-y-4">
              <li className="text-gray-800">Email verificado: {user.emailVerified ? "‚úÖ Verificado" : "‚ùå N√£o verificado"}</li>
              <li className="text-gray-800">Data de cria√ß√£o: {moment(user.metadata.creationTime).format('DD/MM/YYYY')}</li>
              <li className="text-gray-800">Plano premium: {DBUser.premium ? "üëë Ativado" : "Desativado"}</li>
            </ul>
          </>
        )}
      </div>

      {/* Bot√µes de a√ß√£o da conta */}
      <div className="flex flex-wrap gap-4 mt-6">
        {/* Bot√£o para sair da conta */}
        <Button color="failure" className="duration-200 hover:bg-red-600" onClick={handleSignOut}>Sair da conta</Button>
        {/* Bot√£o para excluir a conta */}
        <DeleteAccountButton />
      </div>
    </div>
  )  
}